name: Fetch News Data  # 뉴스 데이터 수집

on: 
  schedule: 
    - cron: "*/20 * * * *"  # 매 20분마다 실행
  workflow_dispatch:  # 수동 실행 가능
  push:  
    branches: 
      - main  # main 브랜치에 push 발생 시 실행

jobs:
  fetch_news:
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3  # 현재 GitHub 저장소를 clone
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub 권한 사용

      - name: Python 설정
        uses: actions/setup-python@v4  # Python 설치
        with:
          python-version: "3.9"

      - name: 최신 빌드 도구 설치
        run: | 
          pip install --upgrade setuptools wheel  # 최신 빌드 도구 업그레이드

      - name: 필요한 패키지 설치
        run: |  # 웹 크롤링 및 DB 저장 라이브러리 설치
          pip install beautifulsoup4
          pip install requests
          pip install numpy==1.21.2  # gensim 3.8.3과 호환되는 numpy 버전
          pip install gensim==3.8.3  # gensim 3.8.3 버전 설치
          pip install flask  # flask 패키지 설치
          pip install selenium  # selenium 패키지 설치
          pip install scipy==1.7.3  # scipy 버전 1.7.3으로 고정

      - name: 변경 사항 확인
        run: |
          git status  # 변경된 파일을 확인합니다.
      
      - name: .db 파일이 변경된 경우 커밋 및 푸시
        run: |
          if git status --porcelain | grep -q '.db'; then  # .db 파일이 변경된 경우에만 실행
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-action@github.com"
            git add *.db
            git commit -m "Update news data $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git push
          else
            echo "No .db files to commit"
          fi

      - name: 디버깅 - .db 파일 확인
        run: |
          ls -la  # .db 파일 목록을 확인
